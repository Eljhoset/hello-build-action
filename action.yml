name: 'Build and Upload RPM'
description: 'Automate the process of building RPM packages and source RPMs from spec files'
inputs:
  workload_identity_provider_id:
    description: 'GCP workload identity provider ID'
    required: true
  service_account:
    description: 'GCP service account'
    required: true
  mock-configuration:
    description: 'Mock configuration to use'
    required: false
    default: epel-8-x86_64
  repo-host:
    description: 'Repository host URL for custom packages'
    required: false
    default: http://localhost
  srpm_output_folder:
    description: 'Output folder for generated source RPM (SRPM) files'
    required: true
    default: /srpm
  rpm_output_folder:
    description: 'Output folder for generated RPM files'
    required: true
  spec_file:
    description: 'List of spec files to build RPMs'
    required: true
    default: '*.spec'
outputs:
  result:
    description: 'Build RPMs'
runs:
  using: 'composite'
  steps:
    - name: 'Authenticate to Google Cloud'
      uses: 'google-github-actions/auth@v1'
      with:
        workload_identity_provider: ${{ inputs.workload_identity_provider_id }}
        service_account: ${{ inputs.service_account }}
    - name: Set up Cloud SDK
      uses: 'google-github-actions/setup-gcloud@v1'
    - name: Cache Mock
      uses: actions/cache@v3
      with:
        path: |
          ~/mock/cache
          ~/mock/lib
        key: ${{ runner.os }}-mock-${{ inputs.repo-host }}
      restore-keys: |
        ${{ runner.os }}-mock-
    - name: Build using docker
      run: >
        docker run --privileged=true --rm 
        -v $(pwd):/mnt 
        -v ${{ inputs.rpm_output_folder }}:/rpm 
        -v ~/mock/cache:/var/cache/mock
        -v ~/mock/lib:/var/lib/mock
        -w /mnt --add-host server:127.0.0.1 eljhoset/hello-build
        -r ${{ inputs.mock-configuration }} --repo-host '${{ inputs.repo-host }}' -s ${{ inputs.srpm_output_folder }} -o /rpm '${{ inputs.spec_file }}'
      shell: bash
    - name: Upload to GCP Artifact Registry
      run: |
        RPMS=$(ls ${{ inputs.rpm_output_folder }}/*.rpm | grep -vE '(src|debug)')
        gcloud config set artifacts/repository gcp-repo
        gcloud config set artifacts/location us-east1          
        gcloud artifacts yum upload --source=$RPMS
        echo "result=$RPMS" >> $GITHUB_OUTPUT
      shell: bash
